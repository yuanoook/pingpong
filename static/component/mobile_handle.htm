<style>
{position:absolute;top:30px;left:0;}
</style>
<div>
  <p class="log"></p>
</div>
<script src="/static/js/smartSocket.js"></script>
<script>
  var me = this;
  var handleID = $.cacheLocalJsonData('etc','mobile_handle_id',$.randomId());

  var connect = $.locationSearchVal('connect');

  me.render();

  var socket = new smartSocket("ws://"+location.host+'/_ws');

  socket.sendMsg = function(msg){
    socket.send($.extend({
      connect: connect,
      from: 'mobile:'+handleID,
      timestamp: new Date().valueOf()
    },msg));
  };

  socket.addMessageListener(function(msg){
    msg.connect == connect && me.trigger({type:'ws:'+msg.type,res:msg});
  });

  socket.sendOnConnected({
    connect: connect,
    type: 'connected',
    from: 'mobile:'+handleID,
    data: {},
    timestamp: new Date().valueOf()
  });

  me.on('ws:connect_received',function(event){
    log('Connect success! '+'<br/>'+new Date());
  });

  window.addEventListener("deviceorientation", function (event) {
    // alpha beta gamma
    socket.sendMsg({
      type: 'deviceorientation',
      data: {
        alpha: event.alpha,
        beta: event.beta,
        gamma: event.gamma,
      }
    });
  });

  window.addEventListener('devicemotion',function (event) {
    // acceleration accelerationIncludingGravity rotationRate
    socket.sendMsg({
      type: 'devicemotion',
      data: {
        acceleration: {
          x: event.acceleration.x,
          y: event.acceleration.y,
          z: event.acceleration.z
        },
        accelerationIncludingGravity: {
          x: event.accelerationIncludingGravity.x,
          y: event.accelerationIncludingGravity.y,
          z: event.accelerationIncludingGravity.z
        },
        rotationRate: {
          alpha: event.rotationRate.alpha,
          beta: event.rotationRate.beta,
          gamma: event.rotationRate.gamma
        }
      }
    });
  });

  function log(obj){
    me.find('.log').html(typeof obj == 'string' ? obj : JSON.stringify(obj));
  }
</script>
